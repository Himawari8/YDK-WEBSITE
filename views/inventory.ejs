<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="/style/inventory.css" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventory</title>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    />
    
    <style>
        
    </style>
</head>
<body>
    <div class="sidebar" id="sidebar">
        <ul>
          <li>
            <a href="#" class="highlighted">
              <i class="fas fa-box"></i><span>Inventory</span>
            </a>
          </li>
          <li>
            <a href="Sell.html">
              <i class="fa fa-shopping-bag" aria-hidden="true"></i
              ><span>Sell</span>
            </a>
          </li>
          <li>
            <a href="#">
              <i class="fa fa-credit-card-alt" aria-hidden="true"></i
              ><span>Orders</span>
            </a>
          </li>
          <li>
            <a href="#">
              <i class="fa fa-map-marker" aria-hidden="true"></i
              ><span>Track</span>
            </a>
          </li>
        </ul>
      </div>

      <h1>Inventory</h1>


        <a href="/add-product">Add Product</a>
    </h2>

    <!-- Filter Section -->
    <div class="container">
      <!-- Filter Section -->
      <div class="filter-container">
        <label for="nameFilter">Name:</label>
        <select id="nameFilter" onchange="filterTable()">
          <option value="">All</option>
        </select>

        <label for="categoryFilter">Category:</label>
        <select id="categoryFilter" onchange="filterTable()">
          <option value="">All</option>
        </select>

        <label for="supplierFilter">Supplier:</label>
        <select id="supplierFilter" onchange="filterTable()">
          <option value="">All</option>
        </select>

        <label for="statusFilter">Status:</label>
        <select id="statusFilter" onchange="filterTable()">
          <option value="">All</option>
        </select>
        <div class="add">
          <h2>
            <i class="fas fa-plus"></i>
            <a href="/add-product">Add Product</a>
          </h2>
        </div>

        <button onclick="resetFilters()">Reset</button>
      </div>
    </div>

    <table border="2" id="productTable" class="blank-table">
        <thead>
            <tr>
                <th class="sortable" onclick="sortTable(0)">Name</th>
                <th class="sortable" onclick="sortTable(1)">Category</th>
                <th class="sortable" onclick="sortTable(2)">Quantity</th>
                <th class="sortable" onclick="sortTable(3)">Reorder Level</th>
                <th class="sortable" onclick="sortTable(4)">Supplier</th>
                <th class="sortable" onclick="sortTable(5)">Purchase Price</th>
                <th class="sortable" onclick="sortTable(6)">Selling Price</th>
                <th class="sortable" onclick="sortTable(7)">Status</th>
                <th class="sortable" onclick="sortTable(8)">Description</th>
                <th class="sortable" onclick="sortTable(9)">Product Id</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% let totalquantity = 0; %>
            <% products.forEach(product => { %>
                <% totalquantity += Number(product.quantity); %>
                <tr>
                    <td><a href="/product-details?prodId=<%= product.prodId %>"><%= product.name %></a></td>
                    <td><%= product.category %></td>
                    <td><%= product.quantity %></td>
                    <td><%= product.reorderLevel %></td>
                    <td><%= product.supplier %></td>
                    <td><%= product.purchasePrice %></td>
                    <td><%= product.sellingPrice %></td>
                    <td><%= product.status %></td>
                    <td><%= product.description %></td>
                    <td><%= product.prodId %></td>
                    <td>
                        <form action="/delete-Product" method="POST" style="display: inline" >
                          <input type="hidden" name="prodId" value="<%= product.prodId %>"/>
                          <button type="submit" class="delete-button">
                            <i class="fa fa-trash" aria-hidden="true"></i>
                          </button>
                        </form>
                        <form action="/edit-Product" method="POST" style="display: inline">
                          <input type="hidden" name="prodId" value="<%= product.prodId %>" />
                          <button type="submit" class="edit-button">
                            <i class="fa fa-pencil" aria-hidden="true"></i>
                          </button>
                        </form>
                      </td>
                </tr>
            <% }) %>
        </tbody>
    </table>
    
    <h3>Total Quantity: <%= totalquantity %></h3>

    <script>
        let sortDirection = {}; 

        function sortTable(columnIndex) {
            let table = document.getElementById("productTable");
            let rows = Array.from(table.rows).slice(1); 
            let isAscending = sortDirection[columnIndex] = !sortDirection[columnIndex]; 

            rows.sort((rowA, rowB) => {
                let cellA = rowA.cells[columnIndex].innerText.trim();
                let cellB = rowB.cells[columnIndex].innerText.trim();

                let numA = parseFloat(cellA);
                let numB = parseFloat(cellB);

                if (!isNaN(numA) && !isNaN(numB)) {
                    return isAscending ? numA - numB : numB - numA;
                } else {
                    return isAscending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
                }
            });

            rows.forEach(row => table.appendChild(row));

            updateHeaderStyles(columnIndex, isAscending);
        }

        function updateHeaderStyles(columnIndex, isAscending) {
            document.querySelectorAll(".sortable").forEach((header, index) => {
                header.classList.remove("sort-asc", "sort-desc");
                if (index === columnIndex) {
                    header.classList.add(isAscending ? "sort-asc" : "sort-desc");
                }
            });
        }

        function filterTable() {
            let nameFilter = document.getElementById("nameFilter").value.toLowerCase();
            let categoryFilter = document.getElementById("categoryFilter").value.toLowerCase();
            let supplierFilter = document.getElementById("supplierFilter").value.toLowerCase();
            let statusFilter = document.getElementById("statusFilter").value.toLowerCase();
            let rows = document.querySelectorAll("#productTable tbody tr");

            rows.forEach(row => {
                let name = row.cells[0].innerText.toLowerCase();
                let category = row.cells[1].innerText.toLowerCase();
                let supplier = row.cells[4].innerText.toLowerCase();
                let status = row.cells[7].innerText.toLowerCase();

                let nameMatch = nameFilter === "" || name.includes(nameFilter);
                let categoryMatch = categoryFilter === "" || category.includes(categoryFilter);
                let supplierMatch = supplierFilter === "" || supplier.includes(supplierFilter);
                let statusMatch = statusFilter === "" || status.includes(statusFilter);

                row.style.display = nameMatch && categoryMatch && supplierMatch && statusMatch ? "" : "none";
            });
        }

        function resetFilters() {
            document.getElementById("nameFilter").value = "";
            document.getElementById("categoryFilter").value = "";
            document.getElementById("supplierFilter").value = "";
            document.getElementById("statusFilter").value = "";
            filterTable();
        }

        function populateDropdowns() {
            let names = new Set();
            let categories = new Set();
            let suppliers = new Set();
            let statuses = new Set();

            document.querySelectorAll("#productTable tbody tr").forEach(row => {
                names.add(row.cells[0].innerText.trim());
                categories.add(row.cells[1].innerText.trim());
                suppliers.add(row.cells[4].innerText.trim());
                statuses.add(row.cells[7].innerText.trim());
            });

            function addOptions(selectId, values) {
                let select = document.getElementById(selectId);
                values.forEach(value => {
                    let option = document.createElement("option");
                    option.value = value;
                    option.textContent = value;
                    select.appendChild(option);
                });
            }

            addOptions("nameFilter", names);
            addOptions("categoryFilter", categories);
            addOptions("supplierFilter", suppliers);
            addOptions("statusFilter", statuses);
        }

        document.addEventListener("DOMContentLoaded", populateDropdowns);
    </script>

</body>
</html>
